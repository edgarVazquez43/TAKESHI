<?xml version="1.0" encoding="utf-8"?>
<launch>
  <remap from="/hardware/mobile_base/cmd_vel" to="/hsrb/command_velocity"/>
  <param name="robot_description_semantic" textfile="$(find knowledge)/manipulation/hsrb.srdf"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find knowledge)/hri/config.rviz">
    <remap from="/initialpose" to="/navigation/localization/initialpose"/>
  </node>

  <group ns="hardware">
    <node name="joy" pkg="joy" type="joy_node" output="screen"/>
    <node name="head" pkg="head" type="head_node" output="screen"/>
    <node name="arm" pkg="arm" type="arm_node" output="screen"/>
    <node name="xtion" pkg="xtion" type="xtion_node" output="screen"/>
  </group>

  <group ns="hri">
    <node name="joystick_teleop" pkg="joystick_teleop" type="joystick_teleop_node.py" output="screen"/>
    <node name="justina_gui" pkg="justina_gui" type="justina_gui_node" output="screen" args="-p $(find knowledge)/navigation/"/>
    <node name="leg_finder" pkg="leg_finder" type="leg_finder_node" output="screen" args="--hyp">
      <param name="obst_xmin" value="0.0"/>
      <param name="obst_xmax" value="0.15"/>
      <param name="obst_ymin" value="-0.13"/>
      <param name="obst_ymax" value="0.13"/>
      <param name="obst_div" value="9"/>
    </node>

    <node name="human_follower" pkg="human_follower" type="human_follower_node" output="screen" args="--pot_fields"/>
    <node name="qr_reader" pkg="qr_reader" type="qr_reader" output="screen"/>

    <!-- sphinx -->
    <arg name="_lm" value="_lm:=/usr/local/share/pocketsphinx/model/en-us/en-us"/>
    <arg name="_dict" value="_dict:=$(find pocketsphinx)/knowledge_base/masterDic.dic"/>
    <arg name="_kws" value="_kws:=$(find pocketsphinx)/knowledge_base/pre_sydney/restaurant/restaurant.kwlist"/>
    <arg name="_jsgf" value="_jsgf:=$(find pocketsphinx)/grammars/pre_sydney/receptionist_names.jsgf"/>
    <arg name="_stream" value="_stream:=true"/>
    <arg name="_wavpath" value="_wavpath:=none"/>
    <arg name="_output" value="_output:=/sphinx_result"/>

    <node name="pocketsphinx_recognizer" pkg="pocketsphinx" type="recognizer.py" output="screen" args="$(arg _lm) $(arg _dict) $(arg _kws) $(arg _jsgf) $(arg _stream) $(arg _wavpath) $(arg _output)">
      <param name="recognize_threshold" value="0.40" type="double"/>
    </node>

  </group>

  <node name="bbros_bridge" pkg="bbros_bridge" type="bbros_bridge_all.py" args="-f $(find bbros_bridge)/src/files/topics_inclusion_list.json"/>

  <group ns="navigation">
    <group ns="localization">
      <node name="map_server" pkg="map_server" type="map_server" output="screen" args="$(find knowledge)/navigation/occupancy_grids/biorobotica2020-1.yaml"/>
      <node name="loc_amcl" pkg="amcl" type="amcl" output="screen" args="scan:=/hsrb/base_scan">
        <param name="odom_alpha1" value="0.001"/>
        <param name="odom_alpha2" value="0.001"/>
        <param name="odom_alpha3" value="0.001"/>
        <param name="odom_alpha4" value="0.001"/>
        <param name="odom_alpha5" value="0.001"/>

	<!-- <param name="odom_alpha1" value="0.1"/> -->
        <!-- <param name="odom_alpha2" value="0.1"/> -->
        <!-- <param name="odom_alpha3" value="0.1"/> -->
        <!-- <param name="odom_alpha4" value="0.1"/> -->
        <!-- <param name="odom_alpha5" value="0.1"/> -->

	<!-- <param name="initial_pose_x" value="0.17"/> <param name="initial_pose_y" value="0.12"/> <param name="initial_pose_a" value="0.03"/> -->
        <param name="initial_pose_x" value="-1.14551"/>
        <param name="initial_pose_y" value="1.88108"/>
        <param name="initial_pose_a" value="0.0"/>

        <param name="update_min_a" value="0.1"/>
        <param name="laser_min_range" value="0.3"/>
        <param name="odom_model_type" value="omni-corrected"/>
      </node>
    </group>

    <group ns="path_planning">
      <node name="simple_move" pkg="simple_move" type="simple_move_node" output="screen" args="--move_head --pot_fields"/>
      <node name="path_calculator" pkg="path_calculator" type="path_calculator_node" output="screen"/>
    </group>

    <group ns="obs_avoid">
      <!-- This is to normal navigation -->
      <!-- This is to detect the small objects and closest objects -->
      <node name="obstacle_detector" pkg="obs_detect" type="obs_detect_node" respawn="true" output="screen" args="--max_x 0.65 --min_y -0.2 --max_y 0.2 --z_threshold 0.03"/>
      <node name="pot_fields" pkg="pot_fields" type="pot_fields_node" output="screen"/>
    </group>
    <node name="mvn_pln" pkg="mvn_pln" type="mvn_pln_node" output="screen" args="--max_attempts 25"/>
    <node name="killer_node" pkg="killer_node" type="killer_node.py" output="screen"/>

  </group>

  <group ns="vision">
    <node name="face_recog" pkg="face_recog" type="face_recog_node" output="screen"/> 


    <node name="facenet_reco" pkg="face_recognition" type="face_recognition_node.py"> 
      <param name="train_dir" value="/home/takeshi/data_sets/facerecognition/"/> 
      <param name="stream" value="False"/>
      <param name="debug" value="False"/> 
      <remap from="/usb_cam/image_raw" to="/hsrb/head_rgbd_sensor/rgb/image_rect_color" /> 
  </node> 
    <!-- <node name="skeleton_finder" pkg="skeleton_finder" type="skeleton_finder_node" output="screen"/> -->

    <node name="openpose_node" pkg="openpose" type="open_pose_node" output="screen">
      <param name="debug_mode" value="true"/>
      <param name="file_links_config" value="$(find openpose)/OpenPoseConfig.xml"/>
      <param name="model_folder" value="$(env OPENPOSE_HOME)/models/"/>
      <param name="net_resolution" value="640x480"/>
      <remap from="/vision/openpose/enable_estimate_pose" to="/vision/skeleton_finder/enable_tracking"/>
      <remap from="/vision/openpose/skeleton_recog" to="/vision/skeleton_finder/skeleton_recog"/>
    </node>

    <node name="skel_follower" pkg="skeleton_follower" type="skeleton_follower_node" args="" output="screen">
      <param name="debug_mode" value="true"/>
      <remap from="/hsrb/command_velocity" to="/hsrb/command_velocity" />
      <param name="k_y" value="0.3" type="double"/>
      <param name="setpoint_y" value="0.50" type="double"/>
      <param name="k_x" value="0.2" type="double"/>
      <param name="setpoint_x" value="2.0" type="double"/>
    </node>

    <node name="gesture_recog_skeleton" pkg="gesture_recog_skeleton" type="gesture_recog_node" output="screen">
      <param name="gesture_method" value="1"/>
      <!-- This params are to waving detect -->
      <param name="num_frames" value="10"/>
      <param name="thr_waving_motion" value="0.3"/>
      <param name="thr_to_person" value="0.3"/>
      <param name="time_elapsed_remove" value="10.0"/>
    </node>

    <node name="handle_detector_server" pkg="handle_detector" type="handle_detector_server" args="" output="screen">
      <!-- <remap from="/cloud" to="/hsrb/head_rgbd_sensor/depth_registered/rectified_points"/> -->
      <remap from="/cloud" to="/hardware/point_cloud_man/rgbd_wrt_robot"/>
      <remap from="/cloud" to="/hardware/point_cloud_man/rgbd_wrt_robot"/>
      <remap from="/processed_cloud" to="/hsrb/processed_cloud"/>
      <param name="voxel_size" value="0.01"/>
      <param name="crop_size" value="2.0"/>
      <param name="seg_ratio" value="0.5"/>
      <!-- Must be larger than voxelSize -->
      <param name="cluster_tolerance" value="0.025"/>
      <param name="prism_height" value="0.8"/>
      <param name="min_points_cluster" value="40" type="int"/>
      <param name="max_points_cluster" value="80" type="int"/>

    </node>

    <node name="obj_reco" pkg="obj_reco" type="obj_reco_node" output="screen" args="--db $(find obj_reco)/TrainingDir/  ">
      <param name="object_categories_file" value="$(find knowledge)/object_categories/"/>
    </node>
    <!-- <node name="hand_detect_in_BB" pkg="hand_recog" type="hand_detect_in_BB_node" output="screen"/> -->

    <node pkg="color_segmentation" type="sat_segmentation_node" name="sat_segmentation_node">
      <remap from="/image" to="/hsrb/hand_camera/image_raw"/>
      <!-- <remap from="/image" to="/hsrb/hand_camera/image_raw" /> -->
      <param name="y_center" value="180"/>
      <param name="x_center" value="120"/>
      <param name="minSat" value="150"/>
      <param name="maxSat" value="255"/>
      <param name="debug" value="false"/>
    </node>

    <node name="obj_reco_flattened" pkg="obj_reco_flattened" type="obj_reco_flattened" output="screen"/>

  </group>

  <group ns="manipulation">
    <rosparam command="load" file="$(find knowledge)/manipulation/kinematics.yaml"/>
    <!-- <node name="ik_moveit" pkg="ik_moveit" type="ik_moveit_node" output="screen"/> -->
    <node name="ik_geometric" pkg="ik_geometric" type="ik_geometric_node" output="screen"/>
    <node name="manip_pln" pkg="manip_pln" type="manip_pln_node" output="screen" args="-f $(find knowledge)/manipulation/predef_poses/"/>
  </group>

  <group ns="knowledge">
    <node
      name="ltm"
      pkg="knowledge"
      type="ltm_node"
      output="screen"
      args="-f $(find knowledge)/navigation/CIA.txt
		-d $(find knowledge)/navigation/known_delimitation_canada.txt
		-o $(find knowledge)/navigation/robocup_sydney.txt"/>
    <node name="pred_ques" pkg="knowledge" type="pred_ques_node" output="screen" args="-f $(find knowledge)/speech_recognition/Questions.xml"/>
    <node name="pred_arms_poses" pkg="knowledge" type="pred_poses_mani_node" output="screen" args="-f $(find knowledge)/manipulation/predef_poses/"/>
    <node name="time_monitor" pkg="act_pln" type="time_monitor" output="screen"/>
  </group>

  <node name="ros_pyclips_services" pkg="knowledge_representation" type="ros_pyclips_services.py" output="screen" args="--mapping gpsr"/>
  <node name="ros_pyclips_node" pkg="knowledge_representation" type="ros_pyclips_node.py" output="screen"/>

</launch>
