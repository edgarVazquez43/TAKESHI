<?xml version="1.0" encoding="utf-8"?>
<launch>
  <remap from="/hardware/mobile_base/cmd_vel" to="/hsrb/command_velocity"/>
  <param name="robot_description_semantic" textfile="$(find knowledge)/manipulation/hsrb.srdf" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find knowledge)/hri/config.rviz"/>

  <group ns="hardware">
    <node name="joy"  pkg="joy"  type="joy_node"  output="screen"/>
    <node name="head" pkg="head" type="head_node" output="screen"/>
    <node name="arm"  pkg="arm"  type="arm_node"  output="screen"/>
    <node name="xtion"  pkg="xtion"  type="xtion_node"  output="screen"/>
  </group>

  <group ns="hri">
    <node name="joystick_teleop" pkg="joystick_teleop" type="joystick_teleop_node.py" output="screen" />
    <node name="justina_gui" pkg="justina_gui" type="justina_gui_node" output="screen" />
    <node name="leg_finder" pkg="leg_finder" type="leg_finder_node" output="screen" args="--hyp">
      <param name="obst_xmin" value="0.0"/>
      <param name="obst_xmax" value="0.15"/>
      <param name="obst_ymin" value="-0.13"/>
      <param name="obst_ymax" value="0.13"/>
      <param name="obst_div" value="9"/>
    </node>

    <node name="human_follower" pkg="human_follower" type="human_follower_node" output="screen"/>
    <node name="qr_reader" pkg="qr_reader" type="qr_reader" output="screen"/>
  </group>

  <node name="bbros_bridge" pkg="bbros_bridge" type="bbros_bridge_all.py" args="-f $(find bbros_bridge)/src/files/topics_inclusion_list.json"/>

  <group ns="navigation">
    <group ns="localization">
      <node name="map_server" pkg="map_server" type="map_server" output="screen"
	    args="$(find knowledge)/navigation/occupancy_grids/bioroboanexo_pre_canada2.yaml"/>
      <node name="loc_amcl" pkg="amcl" type="amcl" output="screen" args="scan:=/hsrb/base_scan">
	<param name="odom_alpha1" value="0.4"/>
	<param name="odom_alpha2" value="0.4"/>
	<param name="odom_alpha3" value="0.4"/>
	<param name="odom_alpha4" value="0.4"/>
	<param name="odom_alpha5" value="0.4"/>
	<param name="initial_pose_x" value="0.0"/>
	<param name="initial_pose_y" value="0.0"/>
	<param name="initial_pose_a" value="0.0"/>
	<param name="update_min_a" value="0.1"/>
	<param name="laser_min_range" value="0.3"/>
	<param name="odom_model_type" value="omni-corrected"/>
      </node>
    </group>

    <group ns="path_planning">
      <node name="simple_move" pkg="simple_move" type="simple_move_node" output="screen" args="--move_head"/>
      <node name="path_calculator" pkg="path_calculator" type="path_calculator_node" output="screen"/>
    </group>

    <group ns="obs_avoid">
      <!-- This is to normal navigation -->
      <!-- This is to detect the small objects and closest objects -->
      <node name="obstacle_detector" pkg="obs_detect" type="obs_detect_node" respawn="true" output="screen" args="--max_x 0.8 --z_threshold 0.06"/>
    </group>
    <node name="mvn_pln" pkg="mvn_pln" type="mvn_pln_node" output="screen" args="--max_attempts 25"/>
  </group>

  <group ns="vision">
    <node name="pano_maker" pkg="pano_maker" type="pano_maker_node" output="screen" args="--d"/>
    <node name="face_recog" pkg="face_recog" type="face_recog_node" output="screen"/>

    <!-- <node name="skeleton_finder" pkg="skeleton_finder" type="skeleton_finder_node" output="screen"/> -->

    <node name="openpose_node" pkg="openpose" type="open_pose_node" output="screen">
      <param name="debug_mode" value="false"/>
      <param name="file_links_config" value="$(find openpose)/OpenPoseConfig.xml"/>
      <param name="model_folder" value="$(env OPENPOSE_HOME)/models/"/>
      <param name="net_resolution" value="640x480"/>
      <remap from="/vision/openpose/enable_estimate_pose" to="/vision/skeleton_finder/enable_tracking"/>
    </node>

    <node name="gesture_recog_skeleton" pkg="gesture_recog_skeleton" type="gesture_recog_node" output="screen">
      <param name="gesture_method" value="1"/>
      <!-- This params are to waving detect -->
      <param name="num_frames" value="10"/>
      <param name="thr_waving_motion" value="0.3"/>
      <param name="thr_to_person" value="0.3"/>
      <param name="time_elapsed_remove" value="10.0"/>
    </node>

    <node name="obj_reco" pkg="obj_reco" type="obj_reco_node" output="screen" args="--db $(find obj_reco)/TrainingDir/"/>
    <!-- <node name="hand_detect_in_BB" pkg="hand_recog" type="hand_detect_in_BB_node" output="screen"/>  -->

    <!-- This code is for handCameraManip -->
   <!--  <node pkg="hand_camera_manip" type="hand_grasp_srv" name="hand_grasp_server" output="screen"> -->

  <!-- </node> -->
  <!-- <node pkg="hand_camera_manip" type="camera_manip_node" name="camera_manip_node" output="screen"> -->
  <!--   <param name="kp_arm_lift" value="0.005"/> -->
  <!--   <param name="kp_arm_flex" value="0.08"/> -->
  <!--   <param name="kp_arm_roll" value="0.05"/> -->
  <!--   <param name="kp_wrist_flex" value="0.5"/> -->
  <!--   <param name="kp_wrist_roll" value="0.002"/> -->
  <!--   <param name="y_center" value="240"/> -->
  <!--   <param name="x_center" value="240"/> -->
  <!--   <param name="area_setpoint" value="50000"/> -->
  <!--   <param name="kp_base_x" value="0.01"/> -->
  <!--   <param name="kp_base_y" value="0.1"/> -->
  <!-- </node> -->
  <!-- <node pkg="surf_recog" type="surf_detector_node" name="surf_detector" output="screen"> -->
  <!--   <remap from="/image" to="/hsrb/hand_camera/image_raw" /> -->
  <!--   <!-\- <param name="image_transport" value="compressed"/> -\-> -->
  <!--   <param name="inFile" value="/tin.xml"/> -->
  <!--   <param name="calib_file" value="/ost.yaml"/> -->
  <!--   <param name="minHessian" value="600"/> -->
  <!--   <param name="good_ratio" value="0.6"/> -->
  <!--   <param name="ransacTHR" value="5"/> -->
  <!-- </node> -->

  </group>

  
  <group ns="manipulation">
    <rosparam command="load" file="$(find knowledge)/manipulation/kinematics.yaml"/>
    <!-- <node name="ik_moveit" pkg="ik_moveit" type="ik_moveit_node" output="screen"/> -->
    <node name="ik_geometric" pkg="ik_geometric" type="ik_geometric_node" output="screen"/>
    <node name="manip_pln" pkg="manip_pln" type="manip_pln_node" output="screen" args="-f $(find knowledge)/manipulation/predef_poses/"/>
  </group>



  <group ns="knowledge">
    <node name="ltm" pkg="knowledge" type="ltm_node" output="screen"
    	  args="-f $(find knowledge)/navigation/known_locations_pre_canada.txt"/>
    <node name="pred_ques" pkg="knowledge" type="pred_ques_node" output="screen"
	  args="-f $(find knowledge)/speech_recognition/Questions.xml"/>
    <node name="pred_arms_poses" pkg="knowledge" type="pred_poses_mani_node" output="screen"
	  args="-f $(find knowledge)/manipulation/predef_poses/"/>
  </group>

  <!-- ROS CLISP -->
  <node name="ros_pyclips_services" pkg="knowledge_representation" type="ros_pyclips_services.py" output="screen" args="--mapping gpsr" />
  <node name="ros_pyclips_node" pkg="knowledge_representation" type="ros_pyclips_node.py" output="screen" />

</launch>
