<?xml version="1.0" encoding="utf-8"?>
<launch>
  <arg name="calculate_diagonal_paths" default="false"/>
  <arg name="simul" default="true"/>
  <arg name="dynamic_map" default="true"/>
  <remap from="/hardware/mobile_base/cmd_vel" to="/hsrb/command_velocity"/>
  <param name="robot_description_semantic" textfile="$(find knowledge)/manipulation/hsrb.srdf" />
  <!-- <param name="robot_description" command="cat $(find hsrb_description)/robots/hsrb.urdf" /> -->
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find knowledge)/hri/apartment_display.rviz"/>

  <group ns="hardware">
    <node name="joy"  pkg="joy"  type="joy_node"  output="screen"/>
    <node name="head" pkg="head" type="head_node" output="screen"/>
    <node name="arm"  pkg="arm"  type="arm_node"  output="screen"/>
    <node name="xtion"  pkg="xtion"  type="xtion_node"  output="screen"/>
    <node name="laser_manager" pkg="laser_manager" type="laser_manager_node" output="screen">
      <param name="simul" value="$(arg simul)"/>
      <!-- param name="bag" value="$(find laser_manager)/bags/example.bag"/ -->
      <param name="dynamic_map" value="$(arg dynamic_map)"/>
    </node>
  </group>

  <group ns="hri">
    <node name="joystick_teleop" pkg="joystick_teleop" type="joystick_teleop_node.py" output="screen" />
    <node name="justina_gui" pkg="justina_gui" type="justina_gui_node" output="screen" />
    <node name="leg_finder" pkg="leg_finder" type="leg_finder_node" output="screen" args="--hyp"/>
    <node name="human_follower" pkg="human_follower" type="human_follower_node" output="screen"/>
    <node name="qr_reader" pkg="qr_reader" type="qr_reader" output="screen"/>
  </group>

  <node name="bbros_bridge" pkg="bbros_bridge" type="bbros_bridge_all.py" args="-f $(find bbros_bridge)/src/files/topics_inclusion_list.json"/>

    <group ns="navigation">
    <group ns="localization">
      <!-- <node name="map_server" pkg="map_server" type="map_server" output="screen" -->
      <!-- 	    args="$(find knowledge)/navigation/occupancy_grids/biorobotica2019-DemoFebrero.yaml"/> -->
      <node name="map_server" pkg="map_server" type="map_server" output="screen"
      	    args="$(find knowledge)/navigation/occupancy_grids/apartment_gazzebo.yaml"/>
      <node name="loc_amcl" pkg="amcl" type="amcl" output="screen" args="scan:=/hsrb/base_scan">
	<param name="odom_alpha1" value="0.4"/>
	<param name="odom_alpha2" value="0.4"/>
	<param name="odom_alpha3" value="0.4"/>
	<param name="odom_alpha4" value="0.4"/>
	<param name="odom_alpha5" value="0.4"/>
	<param name="initial_pose_x" value="0.0"/>
	<param name="initial_pose_y" value="0.0"/>
	<param name="initial_pose_a" value="0.0"/>
	<param name="update_min_a" value="0.1"/>
	<param name="laser_min_range" value="0.3"/>
	<param name="odom_model_type" value="omni-corrected"/>
      </node>
    </group>

    <group ns="path_planning">
      <node name="simple_move" pkg="simple_move" type="simple_move_node" output="screen" args="--move_head"/>
      <node name="path_calculator" pkg="path_calculator" type="path_calculator_node" output="screen">
	<param name="calculate_diagonal_paths" value="$(arg calculate_diagonal_paths)"/>
      </node>
    </group>

    <!-- <group ns="obs_avoid"> -->
      <!-- This is to normal navigation -->
      <!-- This is to detect the small objects and closest objects -->
      <!-- <node name="obstacle_detector" pkg="obs_detect" type="obs_detect_node" respawn="true" output="screen" args="//max_x 0.8 //z_threshold 0.06"/> -->
    <!-- </group>  -->
    <node name="mvn_pln" pkg="mvn_pln" type="mvn_pln_node" output="screen" args="--max_attempts 25"/>
  </group>

  <group ns="vision">
    <node name="pano_maker" pkg="pano_maker" type="pano_maker_node" output="screen" args="--d"/>
    <node name="face_recog" pkg="face_recog" type="face_recog_node" output="screen"/>
    <node name="obj_reco" pkg="obj_reco" type="obj_reco_node" output="screen" args="--db $(find obj_reco)/TrainingDir/"/>
    </group> 


    <group ns="manipulation">
      <rosparam command="load" file="$(find knowledge)/manipulation/kinematics.yaml"/>
      <node name="ik_moveit" pkg="ik_moveit" type="ik_moveit_node" output="screen"/>
      <node name="ik_geometric" pkg="ik_geometric" type="ik_geometric_node" output="screen"/>
      <node name="manip_pln" pkg="manip_pln" type="manip_pln_node" output="screen" args="-f $(find knowledge)/manipulation/predef_poses/"/>
    </group>
    
    

    <group ns="knowledge">
      <node name="ltm" pkg="knowledge" type="ltm_node" output="screen"
	    args="-f $(find knowledge)/navigation/apartment_simul_locations.txt
		  -d $(find knowledge)/navigation/known_delimitation_canada.txt
		  -o $(find knowledge)/navigation/apartment_simul_locations.txt"/>
    <node name="pred_ques" pkg="knowledge" type="pred_ques_node" output="screen"
	  args="-f $(find knowledge)/speech_recognition/Questions.xml"/>
    <node name="pred_arms_poses" pkg="knowledge" type="pred_poses_mani_node" output="screen"
	  args="-f $(find knowledge)/manipulation/predef_poses/"/>
  </group>

  <!-- ROS CLISP -->
  <node name="ros_pyclips_services" pkg="knowledge_representation" type="ros_pyclips_services.py" output="screen" args="--mapping gpsr" />  
  <node name="ros_pyclips_node" pkg="knowledge_representation" type="ros_pyclips_node.py" output="screen" />      

</launch>
