<launch>
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find knowledge)/hri/config.rviz"/>
   <group ns="hardware">
    <node name="joy"  pkg="joy"  type="joy_node"  output="screen"/>
    <node name="head" pkg="head" type="head_node" output="screen"/>
    <node name="arm"  pkg="arm"  type="arm_node"  output="screen"/>
    <node name="xtion"  pkg="xtion"  type="xtion_node"  output="screen"/>
  </group>

  <group ns="hri">
        <node name="joystick_teleop" pkg="joystick_teleop" type="joystick_teleop_node.py" output="screen" />
    <node name="justina_gui" pkg="justina_gui" type="justina_gui_node" output="screen" />
    <node name="leg_finder" pkg="leg_finder" type="leg_finder_node" output="screen" args="--hyp">
      <param name="obst_xmin" value="0.0"/>
      <param name="obst_xmax" value="0.15"/>
      <param name="obst_ymin" value="-0.13"/>
      <param name="obst_ymax" value="0.13"/>
      <param name="obst_div" value="9"/>
    </node>

    <node name="human_follower" pkg="human_follower" type="human_follower_node" output="screen"/>
    <node name="qr_reader" pkg="qr_reader" type="qr_reader" output="screen"/>
  </group>
  
  <node name="hector_mapping" pkg="hector_mapping" type="hector_mapping" output="screen">
    <param name="map_size"                   value="2048" />
    <param name="map_resolution"             value="0.05" />
    <param name="pub_map_odom_transform"     value="true" />
    <param name="scan_topic"                 value="/hsrb/base_scan" />
    <param name="use_tf_scan_transformation" value="false" />
    <param name="map_update_angle_thresh"    value="2.0" />
    <param name="map_update_distance_thresh" value="0.10" />
    <param name="scan_subscriber_queue_size" value="1" />
    <param name="update_factor_free"         value="0.39" />
    <param name="update_factor_occupied"     value="0.85" />
    <param name="base_frame"                 value="base_range_sensor_link" />
  </node>

  <node name="bbros_bridge" pkg="bbros_bridge" type="bbros_bridge_all.py" args="-f $(find bbros_bridge)/src/files/topics_inclusion_list.json"/>

  <group ns="navigation">
    
    <group ns="path_planning">
      <node name="simple_move" pkg="simple_move" type="simple_move_node" output="screen" args="--move_head"/>
      <node name="path_calculator" pkg="path_calculator" type="path_calculator_node" output="screen"/>
    </group>

    <group ns="obs_avoid">
      <!-- This is to normal navigation -->
      <!-- This is to detect the small objects and closest objects -->
      <node name="obstacle_detector" pkg="obs_detect" type="obs_detect_node" respawn="true" output="screen" args="--max_x 0.8 --z_threshold 0.06"/>
    </group>
    <node name="mvn_pln" pkg="mvn_pln" type="mvn_pln_node" output="screen" args="--max_attempts 25"/>
  </group>

  <group ns="vision">
    <node name="pano_maker" pkg="pano_maker" type="pano_maker_node" output="screen" args="--d"/>
    <node name="face_recog" pkg="face_recog" type="face_recog_node" output="screen"/>

    <!-- <node name="skeleton_finder" pkg="skeleton_finder" type="skeleton_finder_node" output="screen"/> -->

    <node name="openpose_node" pkg="openpose" type="open_pose_node" output="screen">
      <param name="debug_mode" value="false"/>
      <param name="file_links_config" value="$(find openpose)/OpenPoseConfig.xml"/>
      <param name="model_folder" value="$(env OPENPOSE_HOME)/models/"/>
      <param name="net_resolution" value="640x480"/>
      <remap from="/vision/openpose/enable_estimate_pose" to="/vision/skeleton_finder/enable_tracking"/>
    </node>

    <node name="gesture_recog_skeleton" pkg="gesture_recog_skeleton" type="gesture_recog_node" output="screen">
      <param name="gesture_method" value="1"/>
      <!-- This params are to waving detect -->
      <param name="num_frames" value="10"/>
      <param name="thr_waving_motion" value="0.3"/>
      <param name="thr_to_person" value="0.3"/>
      <param name="time_elapsed_remove" value="10.0"/>
    </node>

    <node name="obj_reco" pkg="obj_reco" type="obj_reco_node" output="screen" args="--db $(find obj_reco)/TrainingDir/"/>
    <!-- <node name="hand_detect_in_BB" pkg="hand_recog" type="hand_detect_in_BB_node" output="screen"/>  -->

    <!-- This code is for handCameraManip -->
    <!-- <node pkg="hand_camera_manip" type="hand_grasp_srv" name="hand_grasp_server" output="screen">

    </node>
    <node pkg="hand_camera_manip" type="camera_manip_node" name="camera_manip_node" output="screen">
      <param name="kp_arm_lift" value="0.005"/>
      <param name="kp_arm_flex" value="0.08"/>
      <param name="kp_arm_roll" value="0.05"/>
      <param name="kp_wrist_flex" value="0.5"/>
      <param name="kp_wrist_roll" value="0.01"/>
      <param name="y_center" value="240"/>
      <param name="x_center" value="320"/>
      <param name="area_setpoint" value="0"/>
      <param name="kp_base_x" value="0.1"/>
      <param name="kp_base_y" value="0.1"/>
      <param name="routine" value="1"/>
    </node>

    <node pkg="color_segmentation" type="sat_segmentation_node" name="sat_segmentation_node" output="screen">
      <remap from="/image" to="/hsrb/hand_camera/image_raw" />
      <param name="minSat" value="150"/>
      <param name="maxSat" value="255"/>
      <param name="debug" value="true"/>
    </node> -->

  <node name="obj_reco_flattened" pkg="obj_reco_flattened" type="obj_reco_flattened" output="screen"/>

  </group>


  <group ns="manipulation">
    <rosparam command="load" file="$(find knowledge)/manipulation/kinematics.yaml"/>
    <!-- <node name="ik_moveit" pkg="ik_moveit" type="ik_moveit_node" output="screen"/> -->
    <node name="ik_geometric" pkg="ik_geometric" type="ik_geometric_node" output="screen"/>
    <node name="manip_pln" pkg="manip_pln" type="manip_pln_node" output="screen" args="-f $(find knowledge)/manipulation/predef_poses/"/>
  </group>



  <group ns="knowledge">
    <node name="ltm" pkg="knowledge" type="ltm_node" output="screen"
        args="-f $(find knowledge)/navigation/known_locations_montreal.txt -d $(find knowledge)/navigation/known_delimitation_canada.txt"/>
    <node name="pred_ques" pkg="knowledge" type="pred_ques_node" output="screen"
    args="-f $(find knowledge)/speech_recognition/Questions.xml"/>
    <node name="pred_arms_poses" pkg="knowledge" type="pred_poses_mani_node" output="screen"
    args="-f $(find knowledge)/manipulation/predef_poses/"/>
  </group>

  <!-- ROS CLISP -->
  <node name="ros_pyclips_services" pkg="knowledge_representation" type="ros_pyclips_services.py" output="screen" args="--mapping open_challenge" />
  <node name="ros_pyclips_node" pkg="knowledge_representation" type="ros_pyclips_node.py" output="screen" />

</launch>
